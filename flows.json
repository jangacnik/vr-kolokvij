[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Kolokvij naloga",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0f9421a9667d0cab",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Hello",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello",
        "payloadType": "str",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "46ca72c969370fa6"
            ]
        ]
    },
    {
        "id": "46ca72c969370fa6",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Manipulate msg",
        "func": "msg.payload = msg.payload + \" World!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "43ad16f1a19dfefd"
            ]
        ]
    },
    {
        "id": "43ad16f1a19dfefd",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "f68c123b724df029",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "kolokvij/naloga/in",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d6b89c1f22a0f463",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 260,
        "wires": [
            [
                "d56c4d0427b25867"
            ]
        ]
    },
    {
        "id": "ee0917aab242b91e",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "cb11a770aab09b38"
            ]
        ]
    },
    {
        "id": "cb11a770aab09b38",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "kolokvij/naloga",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d6b89c1f22a0f463",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "d56c4d0427b25867",
        "type": "rbe",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "e8c062c5e81afca6"
            ]
        ]
    },
    {
        "id": "a39cdcceba083cae",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"Test\"",
        "payloadType": "str",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "15b274071f2fe313"
            ]
        ]
    },
    {
        "id": "15b274071f2fe313",
        "type": "discordMessageManager",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "channel": "1107628111077588992",
        "token": "",
        "x": 430,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1d6c920acf10e849",
        "type": "discordMessage",
        "z": "f6f2187d.f17ca8",
        "name": "Discord in",
        "channelIdFilter": "1107628111077588992",
        "token": "",
        "x": 80,
        "y": 580,
        "wires": [
            [
                "3915a39248087ebc"
            ]
        ]
    },
    {
        "id": "1199e2f3bd2a323d",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "3915a39248087ebc",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "check if bot command",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^!",
                "vt": "str",
                "case": true
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 600,
        "wires": [
            [
                "75c148c28a6063a2",
                "bc3ab708db8e7077"
            ]
        ]
    },
    {
        "id": "75c148c28a6063a2",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "check command",
        "func": "function reverseString(str) {\n\n    // empty string\n    let newString = \"\";\n    for (let i = str.length - 1; i >= 0; i--) {\n        newString += str[i];\n    }\n    return newString;\n}\n\nvar splitted = msg.payload.split(\" \");\nvar cmd = splitted[0];\nswitch (cmd) {\n    case \"!time\":\n        const d = new Date().toTimeString();\n        msg.payload = d;\n    break;\n    case \"!rev\":\n    splitted = splitted.slice(1);\n    \n    let m = splitted.join(\" \")\n    \n    msg.payload = reverseString(m);\n    break;\n    default:\n    msg.payload = \"Unknown command\"\n    break;\n}\n// msg.payload = splitted;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 660,
        "wires": [
            [
                "6dc590f62c74cc7e",
                "1199e2f3bd2a323d"
            ]
        ]
    },
    {
        "id": "6dc590f62c74cc7e",
        "type": "discordMessageManager",
        "z": "f6f2187d.f17ca8",
        "name": "send bot answer",
        "channel": "1107628111077588992",
        "token": "",
        "x": 910,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3ab708db8e7077",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 540,
        "wires": []
    },
    {
        "id": "e8c062c5e81afca6",
        "type": "discordMessageManager",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "channel": "1107628111077588992",
        "token": "",
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d6b89c1f22a0f463",
        "type": "mqtt-broker",
        "name": "MQTT OUT",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]